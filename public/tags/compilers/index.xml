<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compilers on Day 1 HPC (Staging)</title>
    <link>https://d175uvn6dnkepf.cloudfront.net/tags/compilers.html</link>
    <description>Recent content in compilers on Day 1 HPC (Staging)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Aug 2022 18:28:02 +0000</lastBuildDate><atom:link href="https://d175uvn6dnkepf.cloudfront.net/tags/compilers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get your HPC codes installed and running in minutes using Spack&#39;s Binary Cache</title>
      <link>https://d175uvn6dnkepf.cloudfront.net/post/get-your-hpc-codes-installed-and-running-in-minutes-using-spacks-binary-cache.html</link>
      <pubDate>Mon, 08 Aug 2022 18:28:02 +0000</pubDate>
      
      <guid>https://d175uvn6dnkepf.cloudfront.net/post/get-your-hpc-codes-installed-and-running-in-minutes-using-spacks-binary-cache.html</guid>
      <description>Spack has already been removing the ugly work from building HPC codes, but with the announcement of the Spack Binary Cache at ISC&#39;22, build and deploy times for these complicated applications will drop by 95% or more in most cases.
Greg Becker from Livermore came along to show us how it works, and discuss what&amp;rsquo;s behind it.
You can find a blog post about the announcement here: hpc.news/binaryCache
If you have ideas for technical topics you&amp;rsquo;d like to see us cover in a future show, let us know by finding us on Twitter (@TechHpc) and DM&amp;rsquo;ing us with your idea.</description>
    </item>
    
    <item>
      <title>The Arm64 developer environments - Part 2 of 2</title>
      <link>https://d175uvn6dnkepf.cloudfront.net/post/the-arm64-developer-environments-part-2-of-2.html</link>
      <pubDate>Wed, 08 Jun 2022 15:15:36 +0000</pubDate>
      
      <guid>https://d175uvn6dnkepf.cloudfront.net/post/the-arm64-developer-environments-part-2-of-2.html</guid>
      <description>Olly Perks - our resident Arm64 architecture expert and all round HPC software guy - walks us through the quite extensive support for HPC developers who are planning to work on AWS Graviton processors.
There&amp;rsquo;s a lot of software and it comes from a number of sources, including open source and commercial groups.
This is part 2 of a two-part series - the first part was published last week, abd you can find it here: https://youtu.be/qFrpmgvN9Xs
If you have ideas for technical topics you&amp;rsquo;d like to see us cover in a future show, let us know by finding us on Twitter (@TechHpc) and DM&amp;rsquo;ing us with your idea.</description>
    </item>
    
    <item>
      <title>Arm/AWS Cloud Hackathon - Compilers in HPC, their use and abuse</title>
      <link>https://d175uvn6dnkepf.cloudfront.net/post/armaws-cloud-hackathon-compilers-in-hpc-their-use-and-abuse.html</link>
      <pubDate>Thu, 12 Aug 2021 15:00:23 +0000</pubDate>
      
      <guid>https://d175uvn6dnkepf.cloudfront.net/post/armaws-cloud-hackathon-compilers-in-hpc-their-use-and-abuse.html</guid>
      <description>This is a talk that was delivered at the AWS/Arm Cloud Hackathon in July 2021.
Will Lovett works for Arm on the Arm compiler, and talk about how compilers work, and how to best leverage them to get the result you&amp;rsquo;re looking for when porting a code or working on performance.
The Summer Hackathon ran for a week from July 12-16 in 2021. It&amp;rsquo;s purpose was to assemble the HPC community around a common goal of beginning the porting/testing/tuning process for dozens of codes to use Arm-based processors, in this case, AWS&amp;rsquo;s Graviton2&amp;rsquo;s.
During the week we had a series of talks from global leaders and experts in various fields from compilers to networking, profiling debugging and tooling. We&amp;rsquo;ve published all the talks here in the HPC Tech Shorts channel, in the hope that everyone gets some value from them.</description>
    </item>
    
  </channel>
</rss>
